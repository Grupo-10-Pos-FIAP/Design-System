@use 'sass:color';
@use 'sass:map';

$icon-btn-color-map: (
  'primary': $color-primary,
  'secondary': $color-secondary,
  'success': $color-feedback-success,
  'alert': $color-feedback-alert,
  'base': $color-base,
  'white': $color-white,
  'gray100': $color-gray100,
  'gray200': $color-gray200,
);

$icon-btn-size-map: (
  'small': (
    'size': 32px,
    'padding': $spacing-xs,
    'icon-size': 16px,
  ),
  'medium': (
    'size': 40px,
    'padding': $spacing-sm,
    'icon-size': 20px,
  ),
  'large': (
    'size': 52px,
    'padding': $spacing-md,
    'icon-size': 26px,
  ),
);

@function icon-btn-color($variant, $property: 'background') {
  @if map.has-key($icon-btn-color-map, $variant) {
    @return map.get($icon-btn-color-map, $variant);
  }
  
  @warn "Variante '#{$variant}' não encontrada no mapa de cores do botão";
  @return map.get($icon-btn-color-map, 'primary');
}

@mixin icon-btn-variants {
  &--primary {
    background-color: icon-btn-color('primary');
    color: $color-white;
    border: 1px solid icon-btn-color('primary');

    &:not(:disabled):hover {
      background-color: color.adjust(icon-btn-color('primary'), $lightness: -8%);
      border-color: color.adjust(icon-btn-color('primary'), $lightness: -8%);
    }

    &:not(:disabled):active {
      background-color: color.adjust(icon-btn-color('primary'), $lightness: -12%);
      border-color: color.adjust(icon-btn-color('primary'), $lightness: -12%);
    }
  }

  &--secondary {
    background-color: icon-btn-color('secondary');
    color: $color-white;
    border: 1px solid icon-btn-color('secondary');

    &:not(:disabled):hover {
      background-color: color.adjust(icon-btn-color('secondary'), $lightness: -8%);
      border-color: color.adjust(icon-btn-color('secondary'), $lightness: -8%);
    }

    &:not(:disabled):active {
      background-color: color.adjust(icon-btn-color('secondary'), $lightness: -12%);
      border-color: color.adjust(icon-btn-color('secondary'), $lightness: -12%);
    }
  }

  &--outlined {
    background-color: transparent;
    color: icon-btn-color('primary');
    border: 1px solid icon-btn-color('primary');

    &:not(:disabled):hover {
      background-color: icon-btn-color('primary');
      color: $color-white;
    }

    &:not(:disabled):active {
      background-color: color.adjust(icon-btn-color('primary'), $lightness: -8%);
      border-color: color.adjust(icon-btn-color('primary'), $lightness: -8%);
    }
  }

  &--transparent {
    background-color: transparent;
    color: icon-btn-color('base');
    border: 1px solid transparent;

    &:not(:disabled):hover {
      background-color: icon-btn-color('gray100');
      color: icon-btn-color('primary');
    }

    &:not(:disabled):active {
      background-color: icon-btn-color('gray200');
    }
  }
}

@mixin icon-btn-sizes {
  @each $size, $properties in $icon-btn-size-map {
    &--#{$size} {
      width: map.get($properties, 'size');
      height: map.get($properties, 'size');
      padding: map.get($properties, 'padding');

      .icon-btn__icon {
        width: map.get($properties, 'icon-size');
        height: map.get($properties, 'icon-size');
      }
    }
  }
}

@mixin icon-btn-states {
  &:focus-visible {
    outline: 2px solid icon-btn-color('primary');
    outline-offset: 2px;
  }

  &:disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }

  &:not(:disabled):hover {
    transform: translateY(-1px);
  }

  &:not(:disabled):active {
    transform: translateY(0);
  }
}

@mixin icon-btn-responsive {
  @media (max-width: $breakpoint-mobile) {
    @each $size, $properties in $icon-btn-size-map {
      $mobile-size: map.get($properties, 'size') + 4px;
      $mobile-icon-size: map.get($properties, 'icon-size') + 2px;

      &--#{$size} {
        width: $mobile-size;
        height: $mobile-size;

        .icon-btn__icon {
          width: $mobile-icon-size;
          height: $mobile-icon-size;
        }
      }
    }
  }
}

@mixin icon-btn-accessibility {
  @media (prefers-reduced-motion: reduce) {
    transition: none;

    &:hover,
    &:active {
      transform: none;
    }
  }

  @media (prefers-contrast: high) {
    border-width: 2px;

    &--transparent {
      border-color: currentColor;
    }
  }
}

.icon-btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: $spacing-xs;
  cursor: pointer;
  font-family: $font-family-default;
  font-weight: $font-weight-medium;
  transition: all 0.2s ease-in-out;
  position: relative;
  background: transparent;

  @include icon-btn-states;
  @include icon-btn-variants;
  @include icon-btn-sizes;
  @include icon-btn-accessibility;
  @include icon-btn-responsive;

  &__icon {
    transition: opacity 0.2s ease-in-out;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}
